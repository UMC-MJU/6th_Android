// Generated by view binder compiler. Do not edit!
package com.example.umcflo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.umcflo.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentDetailBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView detailAgencyTv;

  @NonNull
  public final TextView detailAlbumInfoContentTv;

  @NonNull
  public final TextView detailAlbumartistTv;

  @NonNull
  public final TextView detailAlbumfromTv;

  @NonNull
  public final TextView detailAlbuminfoTv;

  @NonNull
  public final TextView detailAlbumnameTv;

  @NonNull
  public final TextView detailArtistTv;

  @NonNull
  public final TextView detailArtistalbumnameTv;

  @NonNull
  public final TextView detailComTv;

  @NonNull
  public final TextView detailFromTv;

  private FragmentDetailBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView detailAgencyTv, @NonNull TextView detailAlbumInfoContentTv,
      @NonNull TextView detailAlbumartistTv, @NonNull TextView detailAlbumfromTv,
      @NonNull TextView detailAlbuminfoTv, @NonNull TextView detailAlbumnameTv,
      @NonNull TextView detailArtistTv, @NonNull TextView detailArtistalbumnameTv,
      @NonNull TextView detailComTv, @NonNull TextView detailFromTv) {
    this.rootView = rootView;
    this.detailAgencyTv = detailAgencyTv;
    this.detailAlbumInfoContentTv = detailAlbumInfoContentTv;
    this.detailAlbumartistTv = detailAlbumartistTv;
    this.detailAlbumfromTv = detailAlbumfromTv;
    this.detailAlbuminfoTv = detailAlbuminfoTv;
    this.detailAlbumnameTv = detailAlbumnameTv;
    this.detailArtistTv = detailArtistTv;
    this.detailArtistalbumnameTv = detailArtistalbumnameTv;
    this.detailComTv = detailComTv;
    this.detailFromTv = detailFromTv;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.detail_agency_tv;
      TextView detailAgencyTv = ViewBindings.findChildViewById(rootView, id);
      if (detailAgencyTv == null) {
        break missingId;
      }

      id = R.id.detail_album_info_content_tv;
      TextView detailAlbumInfoContentTv = ViewBindings.findChildViewById(rootView, id);
      if (detailAlbumInfoContentTv == null) {
        break missingId;
      }

      id = R.id.detail_albumartist_tv;
      TextView detailAlbumartistTv = ViewBindings.findChildViewById(rootView, id);
      if (detailAlbumartistTv == null) {
        break missingId;
      }

      id = R.id.detail_albumfrom_tv;
      TextView detailAlbumfromTv = ViewBindings.findChildViewById(rootView, id);
      if (detailAlbumfromTv == null) {
        break missingId;
      }

      id = R.id.detail_albuminfo_tv;
      TextView detailAlbuminfoTv = ViewBindings.findChildViewById(rootView, id);
      if (detailAlbuminfoTv == null) {
        break missingId;
      }

      id = R.id.detail_albumname_tv;
      TextView detailAlbumnameTv = ViewBindings.findChildViewById(rootView, id);
      if (detailAlbumnameTv == null) {
        break missingId;
      }

      id = R.id.detail_artist_tv;
      TextView detailArtistTv = ViewBindings.findChildViewById(rootView, id);
      if (detailArtistTv == null) {
        break missingId;
      }

      id = R.id.detail_artistalbumname_tv;
      TextView detailArtistalbumnameTv = ViewBindings.findChildViewById(rootView, id);
      if (detailArtistalbumnameTv == null) {
        break missingId;
      }

      id = R.id.detail_com_tv;
      TextView detailComTv = ViewBindings.findChildViewById(rootView, id);
      if (detailComTv == null) {
        break missingId;
      }

      id = R.id.detail_from_tv;
      TextView detailFromTv = ViewBindings.findChildViewById(rootView, id);
      if (detailFromTv == null) {
        break missingId;
      }

      return new FragmentDetailBinding((ConstraintLayout) rootView, detailAgencyTv,
          detailAlbumInfoContentTv, detailAlbumartistTv, detailAlbumfromTv, detailAlbuminfoTv,
          detailAlbumnameTv, detailArtistTv, detailArtistalbumnameTv, detailComTv, detailFromTv);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
